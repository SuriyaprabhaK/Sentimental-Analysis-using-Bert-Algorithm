# -*- coding: utf-8 -*-
"""Sentimental_Analysis-BERT Algorithm

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oXmrPMlLHjdPNqbJcZKapRvS4HfCWdhW

**INSTALL AND IMPORT DEPENDENCIES**
"""

!pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html

!pip install transformers requests beautifulsoup4 pandas numpy

!pip install transformers requests pandas numpy

!pip install bs4

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests

import re

from bs4 import BeautifulSoup

tokenizer= AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')
model= AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

tokens = tokenizer.encode('It is very bad',return_tensors='pt')

result=model(tokens)

'''result.logitsD'''

int(torch.argmax(result.logits))+1

r=requests.get('https://www.yelp.com/biz/mejico-sydney-2')
soup= BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
results=soup.find_all('p',{'class':regex})
reviews=[result.text for result in results]

reviews[0]

import numpy as np
import pandas as pd

df=pd.DataFrame(np.array(reviews), columns=['review'])

df['review'].iloc[0]

def sentiment_score(review):
  tokens=tokenizer.encode(review, return_tensors='pt')
  result=model(tokens)
  return int(torch.argmax(result.logits))+1

sentiment_score(df['review'].iloc[1])

df['sentiment']=df['review'].apply(lambda x: sentiment_score(x[:512]))

df['review']

df

df['review'].iloc[3]